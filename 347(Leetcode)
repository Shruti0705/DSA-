#TOP K FREQUENT ELEMENT

class Solution {

    public class Pair{
        int num;
        int freq;
        Pair(int num, int freq)
        {
            this.num = num;
            this.freq = freq;
        }
    }

    public class Hello implements Comparator<Pair> {
        public int compare(Pair a, Pair b)
        {
            return a.freq - b.freq;
        }
    }

    public int[] topKFrequent(int[] nums, int k) 
    {
        int[] ans = new int[k];
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i=0; i<nums.length; i++)
        {
            int key = nums[i];
            if(map.containsKey(key))
            {
                map.put(key, map.get(key)+1);
            }
            else{
                map.put(key, 1);
            }
        }
        PriorityQueue<Pair> pq = new PriorityQueue<>(map.size(), new Hello());
        for(int key : map.keySet())
        {
            if(pq.size() < k)
            {
                pq.add(new Pair(key, map.get(key)));
            }
            else{
                pq.add(new Pair(key, map.get(key)));
                Pair p = pq.poll();
            }
        }
        int j = 0;
        while(pq.size()!=0)
        {
            ans[j] = pq.poll().num;
            j++;
        }
        return ans;
    }
}






